image: Visual Studio 2015   # на этом VM-образе установлены все Visual Studio с 2008 по 2015

init:
    # секция инициализации, исполняется до клонирования проекта
    # скорее всего, строчка ниже необязательна (так должно быть по умолчанию),
    # вместе с тем, она присутствует в официальных примерах, так что пусть будет:
    - git config --global core.autocrlf input

clone_folder: c:\projects\my-prj # выбираем локальную директорию для клонирования
shallow_clone: true              # копируем только последний коммит, без истории (git clone --depth 1)

matrix:
    fast_finish: false           # не останавливаемся после возникновения ошибки в каком-то из заданий

platform:
    # будем гонять CI на amd64
    - x64
    
configuration:
    # ... и в дебажной, и в релизной конфигурациях ...
    - Debug
    - Release

environment:
    matrix:
        # ... на 2015
        - TOOLCHAIN: msvc14

install:
    # скрипт настройки среды и установки зависимостей:
    - call ci\appveyor\set-env.bat %TOOLCHAIN% %PLATFORM%
    - call ci\appveyor\script-windows.bat

build_script:
    # скрипт сборки проекта:
    - mkdir build
    - cd build
    - cmake .. %CMAKE_CONFIGURE_FLAGS%     # содержит нужный CMake-генератор
    - cmake --build . %CMAKE_BUILD_FLAGS%  # задаёт конфигурацию Debug/Release

artifacts:
    - path: <local-package-path>
      name: package_name

artifacts:
    # файлы-артефакты нужно предварительно явно указать в данной секции
    # в терминологии AppVeyor это называется "push artifacts"
    - path: file1.pkg
    - path: file2.pkg
    - ...

deploy:
    provider: GitHub                         # выкладываем на GitHub Releases
    description: '$(APPVEYOR_REPO_TAG_NAME)' # tag как имя релиза (на Travis так по умолчанию)

    auth_token:
        secure: 7za8rYhL9P+s62eyMfNNGQ== # токен, зашифрованный на сайте appveyor.ci

    artifact: /.*\.pkg/ # регулярное выражение, описывающее все артефакты данного релиза
    force_update: true  # перезаписывать артефакты, если файл с таким именем уже имеется

    on:
        appveyor_repo_tag: true # выполнять deploy только для tagged-commit

            condition: $BUILD_PACKAGE == ON
